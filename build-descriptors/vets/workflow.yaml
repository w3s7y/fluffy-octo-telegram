---
apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  name: vets-workflow
spec:
  entrypoint: vets-ci-workflow
  volumeClaimTemplates:
  - metadata:
      name: workdir
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi

  templates:
  - name: vets-ci-workflow
    steps:
    - - name: pycodestyle
        template: pycodestyle
    - - name: django-tests
        template: djangotests
    - - name: build-vets
        template: build-vets
    - - name: tag-vets
        template: tag-vets
    - - name: push-vets
        template: push-vets
    - - name: update-deploy-descriptor-dev
        template: update-dd

  - name: deploy-to-environemt
    dag:
      tasks:
      - name: deploy-to-dev


  - name: pycodestyle
    container:
      image: python:alpine3.16
      command: [sh, -c]
      args:
        - "pip install application/requirements.txt"
        - "pycodestyle application"
      volumeMounts:
      - name: workdir
        mountPath: /mnt/vol
  - name: djangotests
    container:
      image: python:alpine3.16
      command: [sh, -c]
      args:
        - "pip install application/requirements.txt"
        - "python application/manage.py test"
      volumeMounts:
      - name: workdir
        mountPath: /mnt/vol
  - name: build-vets
    container:
      image: docker:23.0.1-alpine3.17
      command: [sh, -c]
      args:
        - "docker build -t theshipyard/vets-app:${} ."
      volumeMounts:
      - name: workdir
        mountPath: /mnt/vol
  - name: push-vets
    container:
      image: python:alpine3.16
      command: [sh, -c]
      args:
        - "echo push"
  - name: updatedd
    container:
      image: alpine/git:2.36.3
      command: [sh, -c]
      args:
        - "echo $(git --version)"
