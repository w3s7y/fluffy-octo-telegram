---
apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  name: vets-workflow
spec:
  entrypoint: vets-ci-workflow
  volumeClaimTemplates:
  - metadata:
      name: workdir
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi
  templates:
  # The entrypoint template
  - name: vets-ci-workflow
    steps:
    - - name: clone-the-repo
        template: git-clone
    - - name: create-venv
        template: create-venv
    - - name: pip-install-requirements-txt
        template: pip-install
    - - name: lint-and-test
        template: lint-and-test-steps

  # DAG Templates to parallel up tests
  - name: lint-and-test-steps
    dag:
      tasks:
      - name: pycodestyle
        template: pycodestyle
      - name: djangotests
        template: djangotests

  # template to clone the repo and leave it in a folder for other containers.
  - name: git-clone
    inputs:
      artifacts:
      - name: fluffy-octo-telegram-source
        path: /workdir/src
        git:
          repo: https://github.com/w3s7y/fluffy-octo-telegram.git
          revision: "develop"
    container:
      image: alpine/git:2.36.3
      command: [sh, -c]
      workingDir: /workdir/src
      args:
        - "git log -1"
      volumeMounts:
      - name: workdir
        mountPath: /workdir

  # Create a blank venv in the workdir for the other containers
  - name: create-venv
    container:
      image: python:3.9-alpine3.17
      command: [sh, -c]
      workingDir: /workdir
      args: ["pip install virtualenv; virtualenv venv"]
      volumeMounts:
      - name: workdir
        mountPath: /workdir

  - name: pip-install
    container:
      image: python:3.9-alpine3.17
      command: [sh, -c]
      workingDir: /workdir
      args: [". ./venv/bin/activate; pip install -r src/application/requirements.txt"]
      volumeMounts:
      - name: workdir
        mountPath: /workdir

  - name: pycodestyle
    container:
      image: python:3.9-alpine3.17
      command: [sh, -c]
      workingDir: /workdir/src/application
      args:
        - "pycodestyle ."
      volumeMounts:
      - name: workdir
        mountPath: /workdir

  - name: djangotests
    container:
      image: python:3.9-alpine3.17
      workingDir: /workdir
      command: [sh, -c]
      args: [". ./venv/bin/activate; python src/application/manage.py migrate; DJANGO_CACHE=local DJANGO_DATABASE=local DJANGO_DEBUG=True python src/application/manage.py test"]
      volumeMounts:
      - name: workdir
        mountPath: /workdir
