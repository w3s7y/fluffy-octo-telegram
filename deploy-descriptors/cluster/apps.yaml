# This argocd set of applications deploys the cluster wide services, currently:
# kube-prometheus-stack chart in a monitoring namespace
# elastic-stack (the eck-operator & eck-stack charts) in a logging namespace
# a kafka instance for playing with argo-events
# argo-events
# argo-workflow (ci)
---
apiVersion: argoproj.io/v1alpha1
kind: AppProject
metadata:
  name: cluster-services
  # Finalizer that ensures that project is not deleted until it is not referenced by any application
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  description: Top level argocd project to contain all the tooling deployed to the cluster.
  # Allow manifests to deploy from any Git repos
  sourceRepos:
  - 'git@github.com:w3s7y/fluffy-octo-telegram.git'
  - 'https://prometheus-community.github.io/helm-charts'
  - 'https://argoproj.github.io/argo-helm'
  - 'https://charts.bitnami.com/bitnami'
  - 'https://helm.elastic.co'
  - 'https://helm.releases.hashicorp.com'
  destinations:
  - namespace: '*'
    server: https://kubernetes.default.svc
  clusterResourceWhitelist:
    - group: ''
      kind: Namespace
    - group: 'rbac.authorization.k8s.io'
      kind: ClusterRoleBinding
    - group: 'apiextensions.k8s.io'
      kind: CustomResourceDefinition
    - group: 'rbac.authorization.k8s.io'
      kind: ClusterRole
    - group: 'admissionregistration.k8s.io'
      kind: MutatingWebhookConfiguration
    - group: 'admissionregistration.k8s.io'
      kind: ValidatingWebhookConfiguration
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: prometheus-stack
  finalizers:
  - resources-finalizer.argocd.argoproj.io
spec:
  project: cluster-services
  syncPolicy:
      automated: {}
      syncOptions:
      - CreateNamespace=true
      - Prune=true
      # Hack for https://github.com/w3s7y/fluffy-octo-telegram/issues/15
      - Replace=false
      - ServerSideApply=true
  source:
    repoURL: https://prometheus-community.github.io/helm-charts
    chart: kube-prometheus-stack
    targetRevision: 45.1.0
    helm:
      skipCrds: false
  destination:
    server: "https://kubernetes.default.svc"
    namespace: monitoring
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: argo-workflows
  finalizers:
  - resources-finalizer.argocd.argoproj.io
spec:
  project: cluster-services
  syncPolicy:
      automated: {}
      syncOptions:
      - CreateNamespace=true
      - Prune=true
  source:
    repoURL: https://argoproj.github.io/argo-helm
    chart: argo-workflows
    targetRevision: 0.22.11
  destination:
    server: "https://kubernetes.default.svc"
    namespace: argo-workflows
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: argo-events
  finalizers:
  - resources-finalizer.argocd.argoproj.io
spec:
  project: cluster-services
  syncPolicy:
      automated: {}
      syncOptions:
      - CreateNamespace=true
      - Prune=true
  source:
    repoURL: https://argoproj.github.io/argo-helm
    chart: argo-events
    targetRevision: 2.1.2
  destination:
    server: "https://kubernetes.default.svc"
    namespace: argo-events
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: hashicorp-vault
  finalizers:
  - resources-finalizer.argocd.argoproj.io
spec:
  project: cluster-services
  syncPolicy:
      automated: {}
      syncOptions:
      - CreateNamespace=true
      - Prune=true
  source:
    repoURL: https://helm.releases.hashicorp.com
    chart: vault
    targetRevision: 0.23.0
  destination:
    server: "https://kubernetes.default.svc"
    namespace: vault
  ignoreDifferences:
  - group: 'admissionregistration.k8s.io/v1'
    kind: MutatingWebhookConfiguration
    jsonPointers:
    - /webhooks/clientConfig
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: elastic-operator
  finalizers:
  - resources-finalizer.argocd.argoproj.io
spec:
  project: cluster-services
  syncPolicy:
      automated: {}
      syncOptions:
      - CreateNamespace=true
      - Prune=true
  source:
    repoURL: https://helm.elastic.co
    chart: eck-operator
    targetRevision: 2.6.1
    helm:
      parameters:
      - name: "webhook.enabled"
        value: "false"
  destination:
    server: "https://kubernetes.default.svc"
    namespace: logging
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: elastic-stack
  finalizers:
  - resources-finalizer.argocd.argoproj.io
spec:
  project: cluster-services
  syncPolicy:
      automated: {}
      syncOptions:
      - CreateNamespace=true
      - Prune=true
  source:
    repoURL: https://helm.elastic.co
    chart: eck-stack
    targetRevision: 0.3.0
    helm:
      parameters:
      - name: "webhook.enabled"
        value: "true"
  destination:
    server: "https://kubernetes.default.svc"
    namespace: logging
  # As certs are auto generated in test, ignore the generated certs which cause OutOfSync errors in argocd
  ignoreDifferences:
  - group: 'admissionregistration.k8s.io/v1'
    kind: MutatingWebhookConfiguration
    jsonPointers:
    - /webhooks/clientConfig/caBundle
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: kafka
  finalizers:
  - resources-finalizer.argocd.argoproj.io
spec:
  project: cluster-services
  syncPolicy:
      automated: {}
      syncOptions:
      - CreateNamespace=true
      - Prune=true
  source:
    repoURL: https://charts.bitnami.com/bitnami
    chart: kafka
    targetRevision: 20.0.6
  destination:
    server: "https://kubernetes.default.svc"
    namespace: kafka
