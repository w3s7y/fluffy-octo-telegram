---
internal_domain_name: vets.internal
project_description: 'Top level argocd project to contain all the tooling deployed to the cluster.'

# Here are all the individual argocd applications that form the cluster-services AppProject.
# We are basically just pulling in charts from various sources and modifying the deployment
# as necessary.
argo_apps:
- name: prometheus-stack
  version: 45.10.1
  chart: kube-prometheus-stack
  repo: https://prometheus-community.github.io/helm-charts
  namespace: monitoring
  sync_options:
  - CreateNamespace=true
  - Prune=true
  - Replace=false
  # This is a massive chart, so big it fails if you try to install it in the default client-side apply mode.
  - ServerSideApply=true
  helm_values:
    alertmanager:
      ingress:
        enabled: true
        ingressClassName: nginx
        hosts:
        - alertmanager.vets.internal
        paths:
        - '/'
    grafana:
      ingress:
        enabled: true
        ingressClassName: nginx
        hosts:
        - grafana.vets.internal
        paths:
        - '/'
    prometheus:
      ingress:
        enabled: true
        ingressClassName: nginx
        hosts:
        - prometheus.vets.internal
        paths:
        - '/'

- name: argo-workflows
  version: 0.24.1
  chart: argo-workflows
  repo: https://argoproj.github.io/argo-helm
  namespace: argo-workflows
  sync_options:
  - CreateNamespace=true
  - Prune=true
  helm_values:
    singleNamespace: false
    workflow:
      rbac:
        create: true
      serviceAccount:
        create: true
    server:
      extraArgs:
      - '--access-control-allow-origin=workflows.vets.internal'
      - '--auth-mode=server'
      ingress:
        enabled: true
        hosts:
        - 'workflows.vets.internal'

- name: argo-events
  version: 2.2.0
  chart: argo-events
  repo: https://argoproj.github.io/argo-helm
  namespace: argo-events
  sync_options:
  - CreateNamespace=true
  - Prune=true

- name: vault
  version: 0.24.1
  chart: vault
  repo: https://helm.releases.hashicorp.com
  namespace: vault
  sync_options:
  - CreateNamespace=true
  - Prune=true
  helm_values:
    server:
      ingress:
        enabled: true
        ingressClassName: nginx
        hosts:
        - host: vault.vets.internal
          paths: []
    injector:
      enabled: true

- name: kafka
  version: 21.4.4
  chart: kafka
  repo: https://charts.bitnami.com/bitnami
  namespace: kafka
  sync_options:
  - CreateNamespace=true
  - Prune=true

- name: openldap
  version: 4.1.0
  chart: openldap-stack-ha
  repo: https://jp-gouin.github.io/helm-openldap
  namespace: openldap
  sync_options:
  - CreateNamespace=true
  - Prune=true
  helm_values:
    phpldapadmin:
      env: {}
      ingress:
        enabled: "true"
        path: /
        hosts:
        - admin.vets.internal
    ltb-passwd:
      ingress:
        enabled: "true"
        path: /
        hosts:
        - reset.vets.internal

- name: redis
  version: 17.8.5
  chart: redis
  repo: https://charts.bitnami.com/bitnami
  namespace: redis
  sync_options:
  - CreateNamespace=true
  - Prune=true
  - Replace=false
  helm_values:
    auth:
      enabled: false
    metrics:
      enabled: true
      serviceMonitor:
        enabled: true


# Some custom hand-rolled ingress objects
# These should really be deployed as part of the Application that deploys the services
# that way the ingress objects are visible in the argocd UI as part of the application they relate to.
# Rather than here outside of argocd.
ingress:
- argocd:
  name: argocd
  namespace: argocd
  ssl_passthrough: true
  backend:
    name: argocd-server
    port: 80
