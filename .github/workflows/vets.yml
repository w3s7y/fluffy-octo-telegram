name: Vets CI / CD Workflow

on:
  release:
    types: [published]
  push:
    branches: [ "feature/*", "fix/*", "master" ]
  workflow_dispatch:  # Run from UI

env:
  # Set the vars to let django know to run up local db/caches for testing
  DJANGO_CACHE: "local"
  DJANGO_DATABASE: "local"
  DJANGO_DEBUG: "True"
  DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}

jobs:
  terraform-fmt:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        terraform-version: [1.3, 1.4]
    steps:
      - uses: actions/checkout@v3
      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ matrix.terraform-version }}
      - run: terraform -version
      - run: terraform fmt -check -recursive

  python-tests:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.9, 3.11]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r application/requirements.txt
    - name: Make Migrations
      run: |
        python application/manage.py makemigrations
        python application/manage.py migrate
    - name: Run Tests
      run: |
        python application/manage.py test

  docker-build:
    runs-on: ubuntu-latest
    needs: python-tests
    steps:
      - uses: actions/checkout@v3
      - uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - uses: docker/setup-buildx-action@v2
      - uses: docker/build-push-action@v4
        name: Build docker image (no push to dockerhub)
        with:
          context: .
          file: ./Dockerfile
          push: false
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/vets-app:${{ github.sha }}

  docker-build-and-push:
    runs-on: ubuntu-latest
    needs: python-tests
    if: github.ref_type == 'tag'
    steps:
      - uses: actions/checkout@v3
      - uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - uses: docker/setup-buildx-action@v2
      - uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/vets-app:${{ github.ref_name }}

  lint-and-template-vets-charts:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        values-files: [dev, production]
    steps:
      - uses: actions/checkout@v3
      - uses: azure/setup-helm@v3
      - run: helm lint deploy-descriptors/vets/chart --values deploy-descriptors/vets/chart/values-${{ matrix.values-files }}.yaml
      - run: helm template vets-app deploy-descriptors/vets/chart --values deploy-descriptors/vets/chart/values-${{ matrix.values-files }}.yaml

  lint-and-template-infra-charts:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        chart-dirs: [deploy-descriptors/cluster/chart]
    steps:
      - uses: actions/checkout@v3
      - uses: azure/setup-helm@v3
      - run: helm lint ${{ matrix.chart-dirs }}
      - run: helm template cluster-services ${{ matrix.chart-dirs }}
